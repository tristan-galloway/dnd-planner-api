{
  "openapi": "3.0.0",
  "info": {
    "title": "DD Planner API",
    "description": "API documentation for the DD Planner project",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    },
    {
      "url": "https://dnd-planner-api.onrender.com/"
    }
  ],
  "paths": {
    "/users/": {
      "get": {
        "description": "Get all users",
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "example": "Jane Doe" },
                      "email": { "type": "string", "example": "jane@example.com" },
                      "password": { "type": "string", "example": "$2b$10$abcdef..." },
                      "profile_img": { "type": "string", "example": "https://example.com/avatar/jane.jpg" },
                      "character": { "type": "array", "items": { "type": "string" }, "example": ["Arannis", "Thorin"] }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" },
                  "profile_img": { "type": "string" },
                  "character": { "type": "array", "items": { "type": "string" } }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User created" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Get a user by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "User found" },
          "404": { "description": "User not found" }
        }
      },
      "put": {
        "description": "Update a user by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" },
                  "profile_img": { "type": "string" },
                  "character": { "type": "array", "items": { "type": "string" } }
                }
              }
            }
          }
        },
        "responses": {
          "204": { "description": "User updated" },
          "404": { "description": "User not found" }
        }
      },
      "delete": {
        "description": "Delete a user by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "User deleted" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/characters/": {
      "get": {
        "description": "Get all characters",
        "responses": {
          "200": {
            "description": "List of characters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "example": "Arannis" },
                      "race": { "type": "string", "example": "Elf" },
                      "subrace": { "type": "string", "example": "High Elf" },
                      "class": { "type": "string", "example": "Wizard" },
                      "level": { "type": "integer", "example": 5 },
                      "background": { "type": "string", "example": "Sage" },
                      "alignment": { "type": "string", "example": "Chaotic Good" },
                      "experiencePoints": { "type": "integer", "example": 6500 },
                      "playerName": { "type": "string", "example": "Alice" },
                      "abilities": { "type": "object", "example": { "strength": 8, "dexterity": 14 } }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new character",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "race": { "type": "string" },
                  "subrace": { "type": "string" },
                  "class": { "type": "string" },
                  "level": { "type": "integer" },
                  "background": { "type": "string" },
                  "alignment": { "type": "string" },
                  "experiencePoints": { "type": "integer" },
                  "playerName": { "type": "string" },
                  "abilities": { "type": "object" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Character created" }
        }
      }
    },
    "/characters/{id}": {
      "get": {
        "description": "Get a character by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Character found" },
          "404": { "description": "Character not found" }
        }
      },
      "put": {
        "description": "Update a character by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "race": { "type": "string" },
                  "subrace": { "type": "string" },
                  "class": { "type": "string" },
                  "level": { "type": "integer" },
                  "background": { "type": "string" },
                  "alignment": { "type": "string" },
                  "experiencePoints": { "type": "integer" },
                  "playerName": { "type": "string" },
                  "abilities": { "type": "object" }
                }
              }
            }
          }
        },
        "responses": {
          "204": { "description": "Character updated" },
          "404": { "description": "Character not found" }
        }
      },
      "delete": {
        "description": "Delete a character by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Character deleted" },
          "404": { "description": "Character not found" }
        }
      }
    },
    "/items/": {
      "get": {
        "description": "Get all items",
        "responses": {
          "200": {
            "description": "List of items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "example": "Sword of Truth" },
                      "value": { "type": "integer", "example": 1000 },
                      "campain_discovered": { "type": "string", "example": "6657e82ded56c2256c29b108" },
                      "description": { "type": "string", "example": "A legendary sword." }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new item",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "value": { "type": "integer" },
                  "campain_discovered": { "type": "string" },
                  "description": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Item created" }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "description": "Get an item by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Item found" },
          "404": { "description": "Item not found" }
        }
      },
      "put": {
        "description": "Update an item by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "value": { "type": "integer" },
                  "campain_discovered": { "type": "string" },
                  "description": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "204": { "description": "Item updated" },
          "404": { "description": "Item not found" }
        }
      },
      "delete": {
        "description": "Delete an item by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Item deleted" },
          "404": { "description": "Item not found" }
        }
      }
    },
    "/campaigns/": {
      "get": {
        "description": "Get all campaigns",
        "responses": {
          "200": {
            "description": "List of campaigns",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": { "type": "string", "example": "The Lost Mines" },
                      "setting": { "type": "string", "example": "Forgotten Realms" },
                      "description": { "type": "string", "example": "A classic D&D adventure." },
                      "session_notes": { "type": "array", "items": { "type": "string" }, "example": ["Session 1: Arrival", "Session 2: The Cave"] }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new campaign",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "setting": { "type": "string" },
                  "description": { "type": "string" },
                  "session_notes": { "type": "array", "items": { "type": "string" } }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Campaign created" }
        }
      }
    },
    "/campaigns/{id}": {
      "get": {
        "description": "Get a campaign by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Campaign found" },
          "404": { "description": "Campaign not found" }
        }
      },
      "put": {
        "description": "Update a campaign by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "setting": { "type": "string" },
                  "description": { "type": "string" },
                  "session_notes": { "type": "array", "items": { "type": "string" } }
                }
              }
            }
          }
        },
        "responses": {
          "204": { "description": "Campaign updated" },
          "404": { "description": "Campaign not found" }
        }
      },
      "delete": {
        "description": "Delete a campaign by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Campaign deleted" },
          "404": { "description": "Campaign not found" }
        }
      }
    }
  }
}